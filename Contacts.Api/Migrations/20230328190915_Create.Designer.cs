// <auto-generated />
using System;
using Contacts.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Contacts.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230328190915_Create")]
    partial class Create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Contacts.Models.Category", b =>
                {
                    b.Property<string>("type")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("type");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            type = "inny"
                        },
                        new
                        {
                            type = "służbowy"
                        },
                        new
                        {
                            type = "prywatny"
                        });
                });

            modelBuilder.Entity("Contacts.Models.Contact", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Birth_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Category_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subcategory_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Email = "basic@gmail.com",
                            Birth_date = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Category_type = "inny",
                            Name = "Piotr",
                            Password = "Pi0trek%",
                            Phone = "222333444",
                            Subcategory_name = "brak",
                            Surname = "Nowak"
                        },
                        new
                        {
                            Email = "basic2@gmail.com",
                            Birth_date = new DateTime(1980, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Category_type = "inny",
                            Name = "Anna",
                            Password = "Kowal123",
                            Phone = "184726334",
                            Subcategory_name = "brak",
                            Surname = "Kowalska"
                        });
                });

            modelBuilder.Entity("Contacts.Models.Subcategory", b =>
                {
                    b.Property<string>("name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("name");

                    b.ToTable("Subcategories");

                    b.HasData(
                        new
                        {
                            name = "brak"
                        },
                        new
                        {
                            name = "szef"
                        },
                        new
                        {
                            name = "pracownik"
                        },
                        new
                        {
                            name = "klient"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
